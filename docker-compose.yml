version: '3.8'

services:
  postgres:
    image: postgres:15
    # берем настройки пользователя/базы из dbService/.env
    env_file:
      - ./dbService/.env
    # эти environment можно опустить, они дублируют env_file
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5471:5432"
    restart: always

  db_service:
    build:
      context: ./dbService
      dockerfile: Dockerfile
    env_file:
      - ./dbService/.env
    # dbService/.env должен содержать:
    # POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, POSTGRES_HOST=postgres, POSTGRES_PORT=5432, GRPC_PORT=50051
    depends_on:
      - postgres
    ports:
      - "50051:50051"
    restart: on-failure

  api_service:
    build:
      context: ./apiService
      dockerfile: Dockerfile
    env_file:
      - ./apiService/.env
    # apiService/.env должен содержать:
    # GRPC_ADDR=db_service:50051, HTTP_PORT=8080
    depends_on:
      - db_service
    ports:
      - "8080:8080"
    restart: on-failure

volumes:
  postgres_data:
