version: '3.8'

services:
  postgres:
    image: postgres:15
    # берем настройки пользователя/базы из dbService/.env
    env_file:
      - ./dbService/.env
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5471:5432"
    restart: always

  db_service:
    build:
      context: ./dbService
      dockerfile: Dockerfile
    env_file:
      - ./dbService/.env
    # dbService/.env должен содержать:
    # POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, POSTGRES_HOST=postgres, POSTGRES_PORT=5432, GRPC_PORT=50051
    depends_on:
      - postgres
      - service-redis
    ports:
      - "50051:50051"
    restart: on-failure

  api_service:
    build:
      context: ./apiService
      dockerfile: Dockerfile
    env_file:
      - ./apiService/.env
    # apiService/.env должен содержать:
    # GRPC_ADDR=db_service:50051, HTTP_PORT=8080
    depends_on:
      - db_service
    ports:
      - "8080:8080"
    restart: on-failure
  service-redis:
    image: redis:7
    env_file:
      - ./dbService/.env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: [ "2181:2181" ]
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [ zookeeper ]
    ports: [ "9092:9092" ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-service:
    build:
      context: ./kafkaService
      dockerfile: Dockerfile
    env_file:
      - ./kafkaService/.env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - kafka
    restart: on-failure

volumes:
  postgres_data:
  redis_data:
